import PvStatus from "./pv_status_t";
export declare class PorcupineError extends Error {
    private readonly _message;
    private readonly _messageStack;
    constructor(message: string, messageStack?: string[]);
    get message(): string;
    get messageStack(): string[];
    private static errorToString;
}
export declare class PorcupineOutOfMemoryError extends PorcupineError {
}
export declare class PorcupineIOError extends PorcupineError {
}
export declare class PorcupineInvalidArgumentError extends PorcupineError {
}
export declare class PorcupineStopIterationError extends PorcupineError {
}
export declare class PorcupineKeyError extends PorcupineError {
}
export declare class PorcupineInvalidStateError extends PorcupineError {
}
export declare class PorcupineRuntimeError extends PorcupineError {
}
export declare class PorcupineActivationError extends PorcupineError {
}
export declare class PorcupineActivationLimitReachedError extends PorcupineError {
}
export declare class PorcupineActivationThrottledError extends PorcupineError {
}
export declare class PorcupineActivationRefusedError extends PorcupineError {
}
export declare function pvStatusToException(pvStatus: PvStatus, errorMessage: string, messageStack?: string[]): PorcupineError;
//# sourceMappingURL=errors.d.ts.map